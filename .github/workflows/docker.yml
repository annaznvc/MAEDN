name: Docker Build and Test

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'build.sbt'
      - 'project/**'
      - 'Dockerfile'
      - 'docker-compose.yml'
      - '.github/workflows/docker.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'build.sbt'
      - 'project/**'
      - 'Dockerfile'
      - 'docker-compose.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: Build and test with SBT
  sbt-build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'eclipse-temurin'
        cache: sbt

    - name: Cache SBT dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.ivy2/cache
          ~/.sbt
          ~/.coursier/cache
        key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt', 'project/**') }}
        restore-keys: |
          ${{ runner.os }}-sbt-

    - name: Compile project
      run: sbt compile

    - name: Run tests
      run: sbt test

    - name: Create assembly JAR
      run: sbt assembly

    - name: Upload assembly artifact
      uses: actions/upload-artifact@v4
      with:
        name: maedn-assembly
        path: target/scala-3.5.1/maedn-game.jar
        retention-days: 7

  # Job 2: Docker build and test
  docker-build:
    runs-on: ubuntu-latest
    needs: sbt-build

    permissions:
      contents: read
      packages: write
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image locally
      run: |
        docker build -t maedn-test .
        # Test that the image runs without errors
        timeout 10s docker run --rm maedn-test java -version || true
        # Test that the JAR exists and is executable
        docker run --rm maedn-test ls -la /app/maedn-game.jar

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: maedn-test
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Job 3: Docker Compose validation
  docker-compose-test:
    runs-on: ubuntu-latest
    needs: sbt-build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Validate Docker Compose
      run: |
        docker-compose config
        docker-compose build --no-cache

    - name: Test Docker Compose services
      run: |
        # Test production service
        docker-compose up -d maedn-game
        sleep 10
        docker-compose ps
        docker-compose logs maedn-game
        docker-compose down

        # Test development service
        docker-compose --profile dev up -d maedn-dev
        sleep 10
        docker-compose --profile dev ps
        docker-compose --profile dev down

  # Job 4: Image analysis and optimization
  image-analysis:
    runs-on: ubuntu-latest
    needs: docker-build
    if: github.event_name != 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build image for analysis
      run: docker build -t maedn-analysis .

    - name: Analyze image size and layers
      run: |
        echo "## Docker Image Analysis" >> $GITHUB_STEP_SUMMARY
        echo "### Image Size" >> $GITHUB_STEP_SUMMARY
        docker images maedn-analysis --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" >> $GITHUB_STEP_SUMMARY
        echo "### Layer Information" >> $GITHUB_STEP_SUMMARY
        docker history maedn-analysis --no-trunc >> $GITHUB_STEP_SUMMARY

    - name: Run Dive for image efficiency analysis
      run: |
        wget -O dive.tar.gz https://github.com/wagoodman/dive/releases/latest/download/dive_linux_amd64.tar.gz
        tar -xzf dive.tar.gz
        chmod +x dive
        CI=true ./dive maedn-analysis --lowestEfficiency=0.95

  # Job 5: Integration test
  integration-test:
    runs-on: ubuntu-latest
    needs: docker-build

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build and run integration test
      run: |
        docker build -t maedn-integration .

        # Test basic functionality
        echo "Testing basic container startup..."
        timeout 15s docker run --rm maedn-integration || true

        # Test with volume mounting
        echo "Testing volume mounting..."
        mkdir -p test-saves
        docker run --rm -v "$(pwd)/test-saves:/app/saves" maedn-integration ls -la /app/saves

        # Test health check
        echo "Testing health check..."
        docker run -d --name maedn-health-test maedn-integration
        sleep 30
        docker inspect maedn-health-test --format='{{.State.Health.Status}}'
        docker rm -f maedn-health-test

  # Job 6: Deployment readiness check
  deployment-check:
    runs-on: ubuntu-latest
    needs: [sbt-build, docker-build, docker-compose-test, integration-test]
    if: github.ref == 'refs/heads/main'